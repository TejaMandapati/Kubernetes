to watch the status of the Pod
>watch "kubectl get pods"

Flow
https://domgoodw.in/img/k8s_debugging_v1.svg


to get the pod definition
>kubectl get pod pod-name -o yaml > pod.yaml

to get pod definition possible options
>kubectl explain pods --recursive | less

=======LOGS=======
to get the pod logs
$ kubectl -n <n-s> logs -f <pod> --tail=10

>kubectl -n namespace-name logs pod-name
>kubectl logs -n namespace container-name --since 10m
>kubectl logs -n namespace container-name --tail=1000

>kubectl logs --selector=run=hello-world --tail 1


to get the pod logs for particular directory
>kubectl -n elastic-stack exec -it app cat /log/app.log
>kubectl logs myapp-pod -c init-myservice # Inspect the first init container
>kubectl logs myapp-pod -c init-mydb      # Inspect the second init container

=========================================

To get the pod deatils with wide options
>kubectl get pods -o wide

Mark node03 as unschedulable but do not remove any apps currently running on it .
>kubectl cordon node03

To drain the node01 (Empty the node of all applications and mark it unschedulable.)
>kubectl drain node01 --ignore-daemonsets

Configure the node to be schedulable again
>kubectl uncordon node01

Check access
$kubectl auth can-i create deployments
yes- you can
no- you can't

To login into pod
>winpty kubectl exec -it -n <namespace> <pod-name> sh

To view logs from containers
>kubectl exec <pod-name> -- cat /log/app.log



Pod recap
●Pods are collections of containers.
●Pods should never be created directly for a running application○Only for debugging purposes.
●One time use pods should be created via (Cron)Jobs.
●If you want one pod per node Daemonset.
●If you want just a running pod (1 or more) Deployment.
●If you want a pod which comes with volume(s) per pod Statefulset.

Creating a pod using run command:
kubectl run busybox --image=busybox --command sleep 1000 --dry-run=client -o yaml > pod.yaml


To check IP range for pods within the namespaces
kubectl cluster-info dump | grep -m 1 cluster-cidr




To delete the pods which are Evicted State
kubectl get pod -n <namespace> | grep Evicted | awk '{print $1}' | xargs kubectl delete pod -n <name-space>


playground
https://www.katacoda.com/courses/kubernetes/playground
