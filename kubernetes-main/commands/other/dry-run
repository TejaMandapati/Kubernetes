#instead of crating yaml files we can use below commands to Create yaml files

========================================================================
POD
========================================================================
Create an NGINX Pod
>kubectl run nginx --image=nginx

Generate POD Manifest YAML file (-o yaml). Don't create it(--dry-run)
>kubectl run nginx --image=nginx --dry-run=client -o yaml

Exposing a port for pod
>kubectl run custom-nginx --image=nginx port=8080 --dry-run=client -o yaml > podexpose2.yaml
or
>kubectl run custom-nginx --image=nginx --port=8080

Create a pod called httpd using the image httpd:alpine in the default namespace. Next, create a service of type ClusterIP by the same name (httpd). The target port for the service should be 80.
kubectl run httpd --image=httpd:alpine --port=80 --expose

below command will copy the YAML content of a pod to required yaml file 
>kubectl get pod webapp -o yaml > my-new-pod.yaml

========================================================================
Create a deployment
kubectl create deployment --image=nginx nginx

Generate Deployment YAML file (-o yaml). Don't create it(--dry-run)
>kubectl create deployment --image=nginx nginx --dry-run=client -o yaml

Generate Deployment YAML file (-o yaml). Don't create it(--dry-run) with 4 Replicas (--replicas=4)
>kubectl create deployment --image=nginx nginx --dry-run=client -o yaml > nginx-deployment.yaml

Generate Deployment with 4 Replicas
kubectl create deployment nginx --image=nginx --replicas=4

Create a Service named redis-service of type ClusterIP to expose pod redis on port 6379
>kubectl expose pod redis --port=6379 --name redis-service --dry-run=client -o yaml
or
>kubectl create service clusterip redis --tcp=6379:6379 --dry-run=client -o yaml

Create a Service named nginx of type NodePort to expose pod nginx's port 80 on port 30080 on the nodes:
>kubectl expose pod nginx --port=80 --name nginx-service --type=NodePort --dry-run=client -o yaml
or
>kubectl create service nodeport nginx --tcp=80:80 --node-port=30080 --dry-run=client -o yaml
>kubectl expose pod redis --port=6379 --name=redis-service --type=ClusterIP

Grep with image
>kubectl describe deployments.apps deplyment-name | grep -i image

=======Imperative&Declarative====
Imperative:
Create Objects:
>kubectl run --image=nginx nginx
>kubectl create deployment ---image=nginx nginx
>kubectl expose deployment nginx --port 80
>
Update Objects:
#it won't modify yaml file
>kubectl edit deployment nginx
>kubectl scale deployment nginx --replicas=5
>kubectl set image deployment nginx nginx=nginx:1.18
>kubectl replace -f nginx.yaml
>kubectl replace --force -f nginx.yaml

Declarative:
create objects:
>kubectl apply -f nginx.yaml
>kubectl apply -f /path/to/config-files

Update objects:
>kubectl apply -f nginx.yaml


kubectl create service clusterip redis-service  --tcp=6379:6379 --dry-run=client -o yaml > rediscluster.yaml


kubectl create deployment redis-deploy --image=redis --replicas=2 --namespace=dev-ns --dry-run=client -o yaml > deployredis.yaml
